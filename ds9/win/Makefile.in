prefix		= @prefix@
exec_prefix	= @exec_prefix@

bindir		= @bindir@
libdir		= @libdir@
includedir	= @includedir@
datarootdir	= @datarootdir@
datadir		= @datadir@
mandir		= @mandir@

include $(prefix)/make.pkgs

TCL_LIB_SPEC	= @TCL_LIB_SPEC@
TCL_STUB_LIB_SPEC= @TCL_STUB_LIB_SPEC@
TK_LIBS		= @TK_LIBS@
TK_LIB_SPEC	= @TK_LIB_SPEC@
TK_STUB_LIB_SPEC= @TK_STUB_LIB_SPEC@

CC		= @CC@
CFLAGS_DEFAULT	= @CFLAGS_DEFAULT@
CFLAGS_WARNING	= @CFLAGS_WARNING@
EXEEXT		= @EXEEXT@
OBJEXT		= @OBJEXT@

INCLUDES	= @PKG_INCLUDES@ @TCL_INCLUDES@ @TK_INCLUDES@ @TK_XINCLUDES@

PKG_CFLAGS	= @PKG_CFLAGS@
DEFS		= @DEFS@ $(PKG_CFLAGS)

CPPFLAGS	= @CPPFLAGS@
LIBS		= @PKG_LIBS@ @LIBS@
CFLAGS		= @CFLAGS@
COMPILE		= $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)

STRIP		= i686-w64-mingw32-strip.exe

.SUFFIXES: .c .C .$(OBJEXT)

.c.@OBJEXT@:
	$(COMPILE) -DSTATIC_BUILD -c $< -o $@

.C.@OBJEXT@:
	$(COMPILE) -DSTATIC_BUILD -c $< -o $@

#--------------------------defines

OBJS	= ds9.o winMain.o ds9.res.o

LLIBS	= \
	$(libdir)/tksao$(TKSAOVER)/tksao10.a \
	$(libdir)/libfuntools.a \
	$(libdir)/libast.a \
	$(libdir)/libast_err.a \
	$(libdir)/libast_pal.a \
	$(libdir)/tksao$(TKSAOVER)/tksao10.a \
	$(libdir)/tkhtml1$(TKHTMLVER)/tkhtml110.a \
	$(libdir)/tkmpeg$(TKMPEGVER)/tkmpeg10.a \
	$(libdir)/Tclxml$(TCLXMLVER)/Tclxml32.a \
	$(libdir)/Tktable$(TKTABLEVER)/Tktable210.a \
	$(libdir)/Img$(TKIMGVER)/libtkimgpng142.a \
	$(libdir)/Img$(TKIMGVER)/libpngtcl1412.a \
	$(libdir)/Img$(TKIMGVER)/libtkimgtiff142.a \
	$(libdir)/Img$(TKIMGVER)/libtifftcl394.a \
	$(libdir)/Img$(TKIMGVER)/libtkimgjpeg142.a \
	$(libdir)/Img$(TKIMGVER)/libjpegtcl84.a \
	$(libdir)/Img$(TKIMGVER)/libtkimggif142.a \
	$(libdir)/Img$(TKIMGVER)/libtkimgwindow142.a \
	$(libdir)/Img$(TKIMGVER)/zlibtcl128.a \
	$(libdir)/Img$(TKIMGVER)/libtkimg142.a \
	$(libdir)/libxpa.a \
	$(libdir)/tkblt$(TKBLTVER)/libtkbltstub32.a \
	$(libdir)/tkblt$(TKBLTVER)/tkblt32.a \
	$(libdir)/tkwin$(TKWINVER)/tkwin10.a \
	$(libdir)/libxml2.a \
	$(libdir)/libz.a

APPDIR	= $(bindir)/ds9app

#--------------------------main

.NOTPARALLEL :
.PHONY	: ds9 debug appdir framework tcltk tcllib tkcon tkblt xpa cleanup

ds9	: ds9Base$(EXEEXT) appdir framework tcltk tcllib tkcon tkblt xpa cleanup
	cp -p ds9base$(EXEEXT) ds9$(EXEEXT)
	$(STRIP) ds9$(EXEEXT)
	cp -p ds9$(EXEEXT) $(APPDIR)/.

debug	: ds9Base$(EXEEXT) appdir framework tcltk tcllib tkcon tkblt cleanup
	mv ds9base$(EXEEXT) ds9$(EXEEXT)
	cp -p ds9$(EXEEXT) $(APPDIR)/.

ds9Base$(EXEEXT): $(OBJS) $(LLIBS)
	$(RM) $@
	$(CC) $(CFLAGS)	-o $@ \
	$(OBJS) \
	$(LLIBS) \
	$(LIBS) \
	$(TK_STUB_LIB_SPEC) $(TK_LIB_SPEC) \
	$(TCL_STUB_LIB_SPEC) $(TCL_LIB_SPEC) \
	$(TK_LIBS) \
	-mwindows -static

winMain.o : winMain.c
	$(COMPILE) \
	-DSTATIC_BUILD \
	-DTK_LOCAL_APPINIT=SAOAppInit -DTK_LOCAL_MAIN_HOOK=SAOLocalMainHook \
	-c winMain.c -o $@

winMain.c : $(prefix)/tk$(TCLVER)/win/winMain.c
	cp $(prefix)/tk$(TCLVER)/win/winMain.c .

ds9.res.o: ds9.rc ds9.ico
	i686-w64-mingw32-windres -o $@ \
	--define STATIC_BUILD --include $(prefix)/tk$(TCLVER)/generic \
	--include $(prefix)/$(TCLDIR)/generic --include $(prefix)/tk$(TCLVER)/win/rc \
	ds9.rc

appdir	:
	rm -rf $(APPDIR)
	mkdir $(APPDIR)

framework:
	cp install.vbs $(APPDIR)/.
	cp -pr ../library $(APPDIR)/.
	cp -pr ../msgs $(APPDIR)/.
	cp -pr ../doc $(APPDIR)/.
	cp -pr ../cmaps $(APPDIR)/.
	cp -pr ../template $(APPDIR)/.
	echo "pkg_mkIndex ../../bin/ds9app/library *.tcl; exit" | $(bindir)/tclsh86s

tcltk	:
	cp -pr $(prefix)/lib/tcl8 $(APPDIR)/.
	cp -pr $(prefix)/lib/tcl8.6 $(APPDIR)/.
	cp -pr $(prefix)/lib/tk8.6 $(APPDIR)/.

tkblt	:
	mkdir $(APPDIR)/tkblt
	cp -p $(prefix)/tkblt/library/graph.tcl $(APPDIR)/tkblt/.
	echo "pkg_mkIndex ../../bin/ds9app/tkblt *.tcl; exit" | $(bindir)/tclsh86s

tcllib	:
	cp -pr $(prefix)/tcllib/modules/base64 $(APPDIR)/.
	cp -pr $(prefix)/tcllib/modules/ftp $(APPDIR)/.
	cp -pr $(prefix)/tcllib/modules/log $(APPDIR)/.
	cp -pr $(prefix)/tcllib/modules/textutil $(APPDIR)/.
	cp -pr $(prefix)/tcllib/modules/math $(APPDIR)/.

tkcon	:
	mkdir $(APPDIR)/tkcon
	cp -p $(prefix)/tkcon/*.tcl $(APPDIR)/tkcon/.

xpa	:
	cp -p $(bindir)/xpans.exe $(APPDIR)/.

cleanup:
	cd $(APPDIR); find . -depth -name CVS -exec rm -rf {} \;

#--------------------------cleanup

.PHONY	: clean distclean

clean	:
	cd ../library; $(MAKE) clean
	$(RM) core *~ *# ds9Base ds9 *.o

distclean: clean
	-rm -f Makefile config.cache config.log config.status
